{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 60,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "_browser_header.xContentTypeOptions": "nosniff",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.xRobotsTag": "none",
    "_browser_header.xXSSProtection": "1; mode=block",
    "bruteForceProtected": "false",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "failureFactor": "30",
    "maxDeltaTimeSeconds": "43200",
    "maxFailureWaitSeconds": "900",
    "minimumQuickLoginWaitSeconds": "60",
    "offlineSessionMaxLifespan": "5184000",
    "offlineSessionMaxLifespanEnabled": "false",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "waitIncrementSeconds": "60"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "ad594430-6c8a-44fb-9beb-bff574462cd6",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Authentication Options",
      "authenticationExecutions": [
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Authentication options.",
      "id": "076494b7-547d-47cc-8da0-ad26c67cf41f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "99e9b81f-d77d-4442-a22d-22b0acdcfb6a",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "30cd74f9-8904-4ef7-92a1-6b4fe033985e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "c29d2e45-5cb3-4f5a-8497-ce527d9be6bb",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "7f15fa45-5858-4bf4-9ce4-5e99405e195b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "b68f830b-cd7a-4a29-90a5-ed72b6d21fab",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "632b36a5-0946-4b4c-8c6a-314ecfe73995",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "55836f72-890c-4b91-87e1-bfa567a938fa",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "2efe08f1-9f92-475e-b371-c0e3f7cb0903",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-jwt",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "91414ee6-2383-4245-b1ac-e20795d51bde",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-password",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-username",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "ad34edd3-9e34-4fa9-b673-cc00c6634396",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "8c4566a5-d357-454d-900b-c1c04aabfd3f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "7d85c803-a228-4ad8-a68f-b750cf185dcd",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "de1fa170-c83e-4c35-aa77-6f7656906ea2",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "c8eafc07-9992-40f0-ad79-fb6f3b567793",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "8a490eb5-5b67-461c-b6e1-3a2290d83d38",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-password-action",
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-user-creation",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "d0ac5dd8-814f-4e0a-ae54-f207651690ba",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credential-email",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credentials-choose-user",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "ad899a6a-f959-48bd-ac00-ffcbeb3e2859",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "d4ba0e92-477a-4c2a-ba08-27d11b89da97",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "ad3bc412-262a-4142-8e8c-e44d98f7c0c0"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "57608450-7a5e-4469-934f-6c207afe485f"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "ae3bfdfb-7ec3-421f-9676-2d62002cc1ac",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "8691cc23-7b7b-4a5c-9512-88610f9a4165",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "4f707c1e-9e75-45ef-87b3-e98d48760323",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "1658e53e-eb88-4161-9252-df6a749364de",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "a9c39d6c-0c42-402b-8a84-6acf5acbdabb",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "490c311f-4746-41a1-bd8b-0767d0295c51",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8d14490b-1b7e-44a5-bc50-a78431330259",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "bb415ccb-12ce-4f52-b930-95bc6c695a3f",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "eaef39dd-35be-4039-af32-6a5d4618fba4",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "44646a44-987a-4ec1-9131-82ae5df2aef2",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "ffb34311-18c1-41b4-b4bd-a16a6c3ba53f",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a529724f-b31c-4d95-a2f3-06312acc130b",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e3d6a3b2-7337-42d1-8e13-f70f4e170599",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "5bfd0ca5-2dd4-4053-8369-c73a9acce8a5",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "80f66bec-72e6-4dc7-9cd5-a3d349441ff6",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a59aa34a-f8f9-4c5b-8974-c23fd07a221a",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9a3f306c-742d-4287-9f63-cfcfb1676cc6",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "26ac8d9b-6a09-47bf-b391-db8eeb99d6da",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ba79c771-bab6-4b35-8ba4-2a2cd4b3c65f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7237501b-084f-4500-a75a-69f59a0b10ef",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "282fed18-7681-482b-8875-ff4d511418bc",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "12a41d3e-4747-4159-9f61-337c56b16712",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9a4fa783-6434-41fe-a848-dbb733248c93",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5348ab17-8579-44ac-b52b-38f4e22c858e",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2b150920-4414-4c95-a7c2-c6b52e50885e",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "18531535-45b9-4d95-a47c-509cb0aac2e4",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cbdc340e-55b0-4c0c-82c7-e15730e95d55",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "228e43ed-c308-4f86-af0d-d3e7ac7a5671",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "f1aad378-882e-464d-a85b-a4553808ca60",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "c4a524dd-8300-44b2-ad8d-a91b870b057b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "64fb65e4-d5c8-4998-b434-95b761621f69",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "1d5587e7-82a6-417c-b241-bd256eadd97c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "ff2f9f34-1d2b-4948-9fe9-b9ea65d325eb",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "3cc85575-6120-4bdc-ada3-76d8079b9a54",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9385e0b8-810e-48d2-8ac5-ca95a111610f",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    }
  ],
  "clients": [
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/master/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "fc895cb4-3a2f-406d-b7ee-73e3b8e61103",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "/realms/master/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "secret": "919fb38d-5d23-4d48-81a1-787585045a3e",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/master/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "c8a6df92-9010-4c0d-9712-57305ea64955",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d2dc3534-52b8-4ee0-b3f3-b33493a2c31e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/master/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "secret": "565ab670-28c6-47f4-8b09-2164110d1e2c",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "3683ef9f-55b9-4dda-be57-7a8f6fc2c474",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "secret": "b2e1200a-6cae-4ddb-a078-dabc115f2551",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "ba8c889e-4d6d-46c1-8c8c-6c9d3697b87e",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "fe5374c4-c7d2-42dd-97d4-9862c961f6e6",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "master-realm",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "f11e7477-bacb-4407-818c-1a892b9a4228",
      "implicitFlowEnabled": false,
      "name": "master Realm",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "bc383a4a-ac57-4cb1-af47-287d0ebf6094",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "saml.authnstatement": "true",
        "saml.client.signature": "true",
        "saml.force.post.binding": "true",
        "saml.server.signature": "true",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml.signing.certificate": "MIIC3TCCAcUCBgF0/39UkDANBgkqhkiG9w0BAQsFADAyMTAwLgYDVQQDDCdodHRwczovL2Rvb3JtYW4uZGV2Lmd3LmxvY2FsL1NoaWJib2xldGgwHhcNMjAxMDA2MTk1NzQ4WhcNMzAxMDA2MTk1OTI4WjAyMTAwLgYDVQQDDCdodHRwczovL2Rvb3JtYW4uZGV2Lmd3LmxvY2FsL1NoaWJib2xldGgwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmqB3HEIS91E12d+JQGl12Hnbwl4oPPyAe/jlAflMgQeqKK7CU9XZhNKe8bKuafIOiClWB8ufkP8shGy6qnm8WXHyGkX73Ob1mSKtnQvWtoRg9jyf9FWvliYhpWfd0rEd779ZsEinDu4YG5jS9MaoWCktcnEEx+miYwtnbzoDWdCJUbo/H/4BWuCIB0ig9u4bXL6EsmiyBFH0ageGXeUrYl1n3zNO8aNeWDt7XBey6f9hyflBEnQy8mULC9XARhr3JbRtYleM2xyFZA9tmDAaQ/jJdP1BnZRj7g/9NNtxzod5gXgKLVHMXP6ZVtaC/dmCvPdOROUxmj+ITu3U1qwEXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIj8+UkGgTiQDbgkP9vprcvZD6FWYyzuWWbpfefdRgEmMbzEgmYNtVg+hzC6Q9KPNgzzPPIz0fu8otLywEM4bBW58WPXfeH2JCcKY+8zltb5S7bIBJyaPnQLlESdZnT1D3QoUO9L1fr/DQLYSd5TT/lAnMxm2/PtSfg6msJJ7EndR5sJI+aJQvAbA90ycNNSRKX85fLe9I7sZRkBQtPTGP5ikL4osgq7OptwdyfSBs81gFMwUJV1qsNtOq2mzzvh3INIsHzTcscHFkWLjKgNnm34V9QaWKSms7g8vhOY1Rve8GLXCK50ITTlEpSKzLTzpXJKJzZTSt62ALu9r3EelpI=",
        "saml.signing.private.key": "MIIEpAIBAAKCAQEApqgdxxCEvdRNdnfiUBpddh528JeKDz8gHv45QH5TIEHqiiuwlPV2YTSnvGyrmnyDogpVgfLn5D/LIRsuqp5vFlx8hpF+9zm9ZkirZ0L1raEYPY8n/RVr5YmIaVn3dKxHe+/WbBIpw7uGBuY0vTGqFgpLXJxBMfpomMLZ286A1nQiVG6Px/+AVrgiAdIoPbuG1y+hLJosgRR9GoHhl3lK2JdZ98zTvGjXlg7e1wXsun/Ycn5QRJ0MvJlCwvVwEYa9yW0bWJXjNschWQPbZgwGkP4yXT9QZ2UY+4P/TTbcc6HeYF4Ci1RzFz+mVbWgv3Zgrz3TkTlMZo/iE7t1NasBFwIDAQABAoIBAFs1z3ZPWBb8xph77GSiyVwIOFhc17aYed/8iyD9Akm5Sb/tQWuFHBD/XH4Hi7O1SeW5eirw4nFNaMLpuZSvuWSnoY+UucRc2YfNZeHSB9vLOxUV8HDW9IJfz0S5dHFqiIUQMm5bUnhJfYTxIRQaxlfhsnUxH41W20AgBFQEpQa5DJ2y0fgbwokBTcRmZkDXbCGk3BUmIrtin7/1eFdDQ0oop+B09f5zb3JoAKmqhoxIH3pjsFN3+6xU0R41jkyHFBKn8p04SvCVEeRG3acKcgpa7JgkuXD5q4mVe/zruid6yoq+JutJ+V8Cey9/D4jvF/n9ROFMY2LdTMFp/48h64ECgYEA7EEpG7WW1+mwAqhovToUErcZ/L2lWQpMdu/WD39LX8hLN7KYYVk9QUnJFynOkKdVv/9jAc1asY/Uyz7p+zItGZcSaM4xJYgq/8pS2KBNVuIwbeURusyEj2tefy7AufWYwkiJe80N7br/dGPQomFMUAHxTKZxGuYFEys51ZpZCbECgYEAtJXb6N/AFcN6yNVQVTyZADVRaW/EuLss5PIT/opLBSW8+Vn7jznoFVthBcJR4VnGoc9iJWPCCLG3nAIvKvjy6tfpF2V1cOhAIM41NUMhxcYtuoMwSQYryghGHvL7sbNNL1pQ7nsB4lZ8IfF6kcRZ9s3AGhkbsdX00FhI+Z0xoUcCgYEArM7ow8Tqhhn/zaHjou3Veu8FijIpvNxkm+bIW+OPfYsjQaVYAnTk8lmHRnMlDffoKB0lDU9pFFIRo2zsdvn3tS0koRaZKkvUr+8M9Dkk+PVP2UJh2pH4MHOn1j2baSo0x3+JWM3fb1GFw1uzYuLqj+cr2hYwyy0O7zuB/TT+BbECgYAQyraOKvAjle++6Qb1RhM8D7koQrpaKx17lH8DdjyPl/jAfvuDT/Eiu0KEVJNkjwKHXU9VBreuM0hNe26DYm7EI5uLD2YiP5Zm9oXAFCP5zfnGlBhTUf2UZbyPeCyrU27j7lQEOO/t6fjU9y1cjJOI/YzVYGxQ1wJStULj4xgQVQKBgQCLdrW6aBWXcB6Dbo4zjn95ZBOGxVZOrKoa/RcjGP5RuGmKTyMlvjuUNof+pRPBsNXEk4mMW4IrIjPy/vOXMGVGJsceOBunL7BSM3S6ajXwPA26wl0Y26zcsWotrQ/Ym0c5COZAj2AV32ZpWeUlRym/WvvmWJt73tql3xeSA+LF2g==",
        "saml_assertion_consumer_url_post": "https://doorman.dev.gw.local/Shibboleth.sso/SAML2/POST",
        "saml_force_name_id_format": "false",
        "saml_name_id_format": "username",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml_single_logout_service_url_post": "https://doorman.dev.gw.local/Shibboleth.sso/SLO/POST",
        "saml_single_logout_service_url_redirect": "https://doorman.dev.gw.local/Shibboleth.sso/SLO/Redirect"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "https://doorman.dev.gw.local/Shibboleth",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "2b9ed756-73eb-4ea8-9fbb-99c4ce5c25b3",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "saml",
      "publicClient": false,
      "redirectUris": [
        "https://doorman.dev.gw.local/Shibboleth.sso/SAML2/ECP",
        "https://doorman.dev.gw.local/Shibboleth.sso/SAML2/POST"
      ],
      "secret": "ae069509-bc80-44fd-95c6-1fd7c99c978e",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "https://doorman.dev.gw.local"
      ]
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {},
        "id": "235e19dd-a7f9-4db9-8e85-bcd2e784f4ab",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "b398f1b2-5929-49a3-9419-0f3b3463783d",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "0e11bbfb-3145-4b50-a6b8-8c42652305d9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "98c07332-1079-4687-9b52-dd6abf0c10c2",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "46c3e500-a104-4b8d-ad22-ba52c6ea633c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "c5dec048-e7a6-4dfd-9f8e-2237c73027d4",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "e95d8475-2f89-4c0e-b7db-f01de5bb2fd5",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "90aeddb8-ca5a-4bda-9f54-f52cbde71949",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "email",
    "profile",
    "role_list",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "microprofile-jwt",
    "offline_access",
    "phone"
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "directGrantFlow": "direct grant",
  "displayName": "Keycloak",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [],
  "id": "master",
  "internationalizationEnabled": false,
  "keycloakVersion": "8.0.2",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "master",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "fc895cb4-3a2f-406d-b7ee-73e3b8e61103",
          "description": "${role_manage-account}",
          "id": "9bc54838-5c9d-4321-87d4-11c8d8da46d9",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fc895cb4-3a2f-406d-b7ee-73e3b8e61103",
          "description": "${role_manage-account-links}",
          "id": "ca1db93d-d3bc-401c-916c-042f4a0a4342",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fc895cb4-3a2f-406d-b7ee-73e3b8e61103",
          "description": "${role_view-profile}",
          "id": "307fc6b1-6297-4ba0-ba04-39c95a82c29d",
          "name": "view-profile"
        }
      ],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "ba8c889e-4d6d-46c1-8c8c-6c9d3697b87e",
          "description": "${role_read-token}",
          "id": "a446d62b-cfc0-4534-bbbc-ab47558a3896",
          "name": "read-token"
        }
      ],
      "https://doorman.dev.gw.local/Shibboleth": [],
      "master-realm": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-clients"
              ]
            }
          },
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-clients}",
          "id": "3a55ea99-42ad-4db6-b00d-c251eaabe3e1",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-users}",
          "id": "91c97884-8fa2-4747-a50a-d0ef61badedb",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_create-client}",
          "id": "2406c4f0-1ab2-4980-8dcd-260bf9d5d037",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_impersonation}",
          "id": "bfa57097-2154-4f38-994d-0a0566db243a",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-authorization}",
          "id": "586092fb-2d8f-47cb-8acc-2fc6a3ab236f",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-clients}",
          "id": "608e03e8-8ce1-4a8b-96da-8c974d348570",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-events}",
          "id": "e2b946b1-7603-4a41-a6a3-7d374cecd00a",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-identity-providers}",
          "id": "ee37a9eb-feed-48e4-be40-96f6e36626fa",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-realm}",
          "id": "107b7ac3-d466-4bc3-82c7-096db167734f",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_manage-users}",
          "id": "0969871f-75cd-46bc-a6cc-bacec208571f",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_query-clients}",
          "id": "e6b76468-3126-41f5-a3ff-eb9360868a87",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_query-groups}",
          "id": "9622fbdd-b6fe-472b-a474-dc5c9d8a305b",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_query-realms}",
          "id": "aa61340b-8a70-4baa-b47e-e1b2374215b9",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_query-users}",
          "id": "11d4338b-13ac-43e6-9ebf-e234c234c35e",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-authorization}",
          "id": "b5325b1d-ccdb-412a-8af3-4847c04ee15e",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-events}",
          "id": "a24db2af-447c-4f88-a5b9-c0423ca54f19",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-identity-providers}",
          "id": "32061edd-294b-4a29-abea-b34eac3b56fa",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f11e7477-bacb-4407-818c-1a892b9a4228",
          "description": "${role_view-realm}",
          "id": "75b9a589-acb9-440a-87a0-7d4583f5f0f2",
          "name": "view-realm"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "master-realm": [
              "create-client",
              "impersonation",
              "manage-authorization",
              "manage-clients",
              "manage-events",
              "manage-identity-providers",
              "manage-realm",
              "manage-users",
              "query-clients",
              "query-groups",
              "query-realms",
              "query-users",
              "view-authorization",
              "view-clients",
              "view-events",
              "view-identity-providers",
              "view-realm",
              "view-users"
            ]
          },
          "realm": [
            "create-realm"
          ]
        },
        "containerId": "master",
        "description": "${role_admin}",
        "id": "31071f26-b391-451d-b7cd-e0dbd4463d76",
        "name": "admin"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "master",
        "description": "${role_create-realm}",
        "id": "584ae8a2-b1ba-4e9b-ac53-9db20ef8f42c",
        "name": "create-realm"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "master",
        "description": "${role_offline-access}",
        "id": "0760a851-4880-4c87-88ce-f8b5451337de",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "master",
        "description": "${role_uma_authorization}",
        "id": "9236dd32-c936-4cc4-822e-83cefe9352d9",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "createdTimestamp": 1602084278588,
      "credentials": [
        {
          "createdDate": 1602084278699,
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}",
          "id": "4baf8a25-68d7-4a70-a42f-e16ad32c4b0d",
          "secretData": "{\"value\":\"AkLM3Jf9P+NSt3EV8vjrAYzZMHfbtSklssQmUbKntY47CD+BQD5rC9oH3s5Fv7Hr8PmWoiL1ZN1mc8dzXZzfXw==\",\"salt\":\"DDjAfWOiYWVjCt8li2X7CA==\"}",
          "type": "password"
        }
      ],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "231d721b-ebcc-4801-83f4-73f0d5cb6317",
      "notBefore": 0,
      "realmRoles": [
        "admin",
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "dvader"
    }
  ],
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
