{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "hostname": "trial12.keycloak.devlocal.navex-pe.com",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60"
  },
  "authenticationFlows": [
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "c950edf6-4290-49eb-8d12-c42169586d9b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "37f32c45-0c14-49f8-a822-e7b914e9de3e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "id": "805b1f05-c6dd-4440-9f9f-cec01f8b9657",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorConfig": "doorman-default",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "ff583ed2-c9fc-4a48-a3e1-dbf2900bbccd",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "3aea1d0f-9044-4d55-9579-5b17bb802ced",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "3af59c38-6f43-4d28-a5b8-9e95d935e6f3",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant - direct-grant-validate-otp - Conditional",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
      "id": "a0af12f7-10c7-432d-a16f-1f5cca530a3b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "346279c9-d98a-46bc-bb4c-c0828ce15a0e",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "00633c67-bc55-40ea-a773-8031afc0febf",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms - auth-otp-form - Conditional",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "a0206c2f-6cac-4b18-8470-68b5d6de3d39",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "forms - auth-otp-form - Conditional",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "id": "2ad68973-0fd4-40b4-aedf-0d68841a55ce",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "e623c3e8-9153-4aa9-bd38-2853e7c06d27",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "d5a9cb53-955f-4247-97a0-cea7dd1ca6ed",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "cef56cf9-310f-4a3c-add8-4f8c232a56e5",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "reset credentials - reset-otp - Conditional",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "7c97e63f-7ae7-4305-a218-38c9398fe422",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "reset credentials - reset-otp - Conditional",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the reset-otp authenticator should be used or not.",
      "id": "257c6822-b0e5-4242-a7cf-6bb70f7368c4",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "d14201e2-ba1b-40c2-8a61-05841a936968",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "dd0dad4d-b268-4ff7-b80e-0e07db6e97c8"
    },
    {
      "alias": "doorman-default",
      "config": {
        "defaultProvider": "doorman"
      },
      "id": "90ef1e05-de11-4720-ad69-deb4710c4d7e"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "ac1bae93-4325-47f6-a03e-927813aa20da"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self' *.navex-pe.com:* https://doorman.dev.gw.local; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "1e570bd0-dce9-4cce-9630-7d57826e1eee",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "fa7dc19b-dd58-4535-9ab0-b4c2dcc6357a",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "c0fdd471-7630-4d0b-990a-26b71d62d6ae",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "7fa18af6-f741-43ec-b536-0df43ce79ce6",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "9360a353-cec2-4571-b105-ee6a3f4c028a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "d1adba4e-4b84-463d-a652-1c253e3e8013",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9f8ddd0d-2923-4eb4-9e1a-5a4a20e6d842",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "23516db6-4703-4847-9418-287315643e71",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d7308436-96c5-4afa-91c1-d80419ab96a5",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6a79f6da-c71c-417a-b93d-fecf43d5bdd3",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "a159f3c7-8e4e-429c-a7e7-1615b33d2851",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0682a29d-1a0e-4c88-8693-c683894c49cd",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d83c69ea-9567-4630-8350-ad793c6e5471",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "8e9c4846-799b-43f5-b8c0-a337002bccc7",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2c0aa06c-c138-4f8a-b01b-b5fc876bafb8",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "53fdc95b-8aa5-4034-819f-ff2a5fc585d2",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4f4529fb-02bf-4459-a227-fedfebdc81cd",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0343f153-6909-4c53-a2bf-1484538c1c7c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b4fbe615-2fef-46a4-b38a-1c90a024d0c5",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5e1a5971-c425-46d5-8778-e6f582c4ca19",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "78f81245-3d3e-4d2e-964c-08667de9c1de",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "453db09c-d0ab-42a2-805b-e3ef0d2f28d3",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "695f86da-d88c-4afb-bfe4-0e0ed044afa2",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "puid",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "61a8a201-f7ca-4478-8bf8-3907f385e295",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3e3623c1-561a-42ff-a559-ed98f811e752",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b8fd50fe-bff5-4bb0-ac00-2499bef06033",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "77e43ff3-e558-4326-a5e5-e6c80940e33d",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "aa403b19-51fc-401f-abba-cdfd485b7017",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "050a26b0-ff65-4b6e-aabc-0ba177e2f0db",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "3d5967db-4d0f-4d46-b3ab-55fe3b289fa2",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "3e8a7497-1feb-4aa8-b6c8-149817e54966",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "c12c00a5-ac8f-4857-af46-6fb7797d44e9",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "AppShell Audience",
      "id": "6a11a2b4-e444-47fb-b3e9-a9fa23776b07",
      "name": "appshell_audience",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "included.client.audience": "appshell",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "47e1982c-a7ff-40d6-88c3-e34371b7a20e",
          "name": "appshell",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "Mappers for user attributes sent by Doorman",
      "id": "806be982-6418-4be6-b2f6-4fa0cc3afe8d",
      "name": "doorman-mappings",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "false",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ef489843-7c24-4d85-a9ec-bc9349a22289",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "false",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5953bd8b-6a29-4817-9b32-49e891463b06",
          "name": "lastName",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "false",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "72164967-5f23-4961-87e2-4b559ca00073",
          "name": "firstName",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "false",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5d7095e7-a145-4fbf-9598-ef4f467f5190",
          "name": "PreferredLanguageVersion",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientkey",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "clientkey",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d5d60700-d741-4e48-94d8-fb0c6be4e988",
          "name": "ClientKey",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "puid",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "puid",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "67c9ed78-597f-41c4-a672-76d564f614b2",
          "name": "Puid",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "tenantid",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "tenantid",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6e0736ca-f843-4440-8458-36812a131148",
          "name": "TenantId",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "user_store_role",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "user_store_role",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "10434392-21ca-4cb3-bc8a-35e9e77f98c1",
          "name": "UserStoreRole",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "preferred_username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "83ebc0ba-fe9a-49a5-bad0-568d83daa442",
          "name": "userName",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "false",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "user.attribute": "middle_name",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7b2c693e-d1a0-472f-a888-c7c6c6e731b2",
          "name": "MiddleName",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "6ea58ee3-5405-490f-82d6-23d042fa23b3",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "de8b8cec-1622-4696-8813-6fb509c0ee6a",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3234fe80-1df9-4378-9d8f-04ec1733a871",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "id": "36b559a1-ec61-431b-ad14-a093e1671800",
      "name": "read:cm_api",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "customermanager"
          },
          "consentRequired": false,
          "id": "df7b34cb-2e18-4b73-8103-f3bf91cace9b",
          "name": "customermanagermapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "id": "3e7a7c31-3e58-44bb-a090-0377df07d372",
      "name": "read:tenant_identity",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "customermanager",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "9661a065-5181-4880-bd29-eea2c8645830",
          "name": "customermanagermapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "adminUrl": "https://dev.ep.local/",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.url": "https://dev.ep.local/authorization/authoidc/backchannellogout",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "epim-iem",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "e3736860-71e0-4a8b-8097-d3962d3df7ea",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "https://dev.ep.local/*",
        "https://doorman.dev.gw.local/*"
      ],
      "rootUrl": "https://dev.ep.local/",
      "secret": "9923b91d-4706-4ca0-8e97-1493e3956f5a",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "https://dev.ep.local"
      ]
    },
    {
      "adminUrl": "https://secure.dev.ep.local",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "epadmin",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "fdf40b63-89d7-4702-9d5e-48d83c13a734",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "https://doorman.dev.gw.local/*",
        "https://secure.dev.ep.local/*"
      ],
      "rootUrl": "https://secure.dev.ep.local",
      "secret": "442cea9a-5177-47e1-a6d4-a70418620019",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "https://secure.dev.ep.local"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.url": "http://admin.devlocal.navex-pe.com:3000/auth/backchannel-logout",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "appshell-bff",
      "consentRequired": false,
      "defaultClientScopes": [
        "appshell_audience",
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "description": "OIDC client used when appshell is running on aws cloudfront",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "da2ef4a2-b211-4883-8a25-3a1866ef2c91",
      "implicitFlowEnabled": false,
      "name": "appshell-bff",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "http://admin.devlocal.navex-pe.com:3000/*",
        "http://navexadmin.devlocal.navex-pe.com:3000/*",
        "http://user.app.devlocal.navex-pe.com:3000/*",
        "https://auth.devlocal.navex-pe.com:3000/*",
        "https://doorman.dev.gw.local/*"
      ],
      "secret": "9b630071-25ec-4089-b31b-483d8860cefa",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "http://admin.devlocal.navex-pe.com:3000",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "appshell",
      "consentRequired": false,
      "defaultClientScopes": [
        "appshell_audience",
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "description": "appshell",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "287d8057-46b6-466f-88b3-97cbad62cfd3",
      "implicitFlowEnabled": false,
      "name": "appshell",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "http://admin.devlocal.navex-pe.com:3000/*",
        "http://navexadmin.devlocal.navex-pe.com:3000/*",
        "http://user.app.devlocal.navex-pe.com:3000/*",
        "https://auth.devlocal.navex-pe.com:3000/*",
        "https://doorman.dev.gw.local/*"
      ],
      "secret": "3d4ca889-bbdc-43e8-8092-6a2ce1f27782",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/navex/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "6e92d139-96c8-443f-a779-e8f86e40fe13",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b312941e-a44e-4176-bf76-09378ad6b201",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/navex/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "secret": "debb86a6-3924-4a1d-84de-388b321bf805",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/navex/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "c2d58c5a-95d4-4f0b-8dc9-a5509586e1dc",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "77488215-eb5d-4fab-b075-6b67152988be",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/navex/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "secret": "3c7b3d85-e4db-4c0e-b742-88aa9bd595b6",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/navex/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "5b425be5-886d-4c52-b3fa-bd784139e791",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "/realms/navex/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "secret": "96a6c7fb-d59f-437a-8f07-ce45dc440bb5",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "insights",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "description": "Insights into the wonder of Navex.",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "f631d062-9667-4caf-97c4-2d654a2953bb",
      "implicitFlowEnabled": false,
      "name": "Insights",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cf5bd60a-550f-41d6-ae1e-8ee2091509b3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f4a376f0-c768-4dd4-922f-be0d036c6472",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0f571c22-db32-48b1-9a79-85c3a787c232",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "https://api.dev.insights.local/public/v2/BrowserAuthorization.FinishBrowserAuthorization/*",
        "https://api.dev.insights.local/public/v3/BrowserAuthorization.*",
        "https://api.navexone-dev.local/analytics/public/v2/BrowserAuthorization.FinishBrowserAuthorization/*",
        "https://api.navexone-dev.local/analytics/public/v3/BrowserAuthorization.*",
        "https://doorman.dev.gw.local/*"
      ],
      "secret": "b902d50a-0725-4b33-a5c0-20554605c9a9",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "*"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "73930ce4-9a33-45b3-8b21-697c5af4907a",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "secret": "795a7d63-8dc3-4943-8db0-ddb6811a491a",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "ce1cac52-1298-4064-9a98-dd2a9fee63c7",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "4d5787cb-133a-44e6-b04e-45b038461ecf",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "d765e010-d7bc-431e-9467-f816552da8ca",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "cmd-backend",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "b071ddbf-ec3f-45a8-8781-6ec5e4399334",
      "implicitFlowEnabled": false,
      "name": "Content Management and Distribution",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "https://doorman.dev.gw.local/*",
        "https://maint.pt.dev.local/oidc/coderedirector/*"
      ],
      "secret": "46a63bf4-99e1-40c5-a448-2d22b026efdd",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "cmd-frontend",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "01220845-a0e9-469b-9dee-9fe3ccb114b7",
      "implicitFlowEnabled": false,
      "name": "Content Management and Distribution",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "https://doorman.dev.gw.local/*",
        "https://maint.pt.dev.local/oidc/coderedirector/*",
        "https://maint.pt.dev.local/oidc/silentchecksso/*"
      ],
      "secret": "2605c91b-0722-424d-b530-8cb49951d37f",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "https://maint.pt.dev.local"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "riskrate",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "413b9525-82a5-4da5-adfa-4b1adde07710",
      "implicitFlowEnabled": false,
      "name": "RiskRate",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "https://auth.dev.rr.local/*",
        "https://doorman.dev.gw.local/*"
      ],
      "secret": "2F2A09DD-EF9B-4081-BBC2-0568CA4EB0B1",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "customermanager",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "961f57d5-7695-4a5c-a63e-8eeb82dbafb8",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone",
        "read:cm_api",
        "read:tenant_identity"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "87cb6b4c-5ccc-49a6-b0a9-4c741465f323",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8c402a25-789a-448b-847a-83fa60e7ef44",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "94a32560-ea29-45ff-bc4f-95b4df0b8afc",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "4137e66e-3d98-4793-b3f1-3f43f18b98b5",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "coi",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "e2de7f57-b83a-479e-b8d4-eb5ddfba3657",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "coi",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "337cf350-bbbe-40ad-b2ec-9d8e13fa5611",
          "name": "coi_audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "https://auth.coi.devlocal.navex-pe.com:18443/*",
        "https://auth.coi.devlocal.navex-pe.com:6443/*",
        "https://auth.devlocal.navex-pe.com:18443/*",
        "https://auth.devlocal.navex-pe.com:6443/*"
      ],
      "secret": "9bcd2fa1-b504-4949-89ca-5ab076dcc6f8",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "moonwatch-api-proxy",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "8f85ca79-c607-4df0-8ef8-d62607057212",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0c9d8448-7d7f-4e73-b9f2-cc0e021ce501",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5b8af2e0-398e-4432-995e-409db51f6f21",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e70259cd-c7d4-4806-9e16-b14a3aa89081",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "*"
      ],
      "secret": "4d1e3de1-6f61-46b1-92a8-e1eccce61559",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "ncis-api",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "49328f9d-c417-465a-b11f-32ce40789a20",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dba02eaa-2292-458b-a3be-6cddb667441f",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e6239dbe-de22-480e-9a75-d86b1b773bb9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0498ef86-32a1-44fc-b19f-0d34b637cc85",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "ba7e8659-cd9e-4410-a159-6380d0d8af43",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "workato",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "bd2f6179-8285-4b02-a5e4-30c094334790",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientkey",
            "claim.value": "workato",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dc40d40a-5e0a-4e31-8c53-bd40fcfbe736",
          "name": "clientkey",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a372ee54-0058-46f5-9276-4bd7372a1c6c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6d868345-fa82-4a0d-8dd3-b00dd2b39503",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6370de0c-f465-44b0-b146-3f22c9f4ea8e",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "e3390baa-b774-4e0f-ad50-ce217132ab8f",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "coursecustomizer",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "e6e52cd1-9c4b-49af-a91d-614476d5cad3",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "coursecustomizer",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "b198625f-aaaf-4525-977a-945bee8ebbae",
          "name": "cc_audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "https://webapi-integration.lcms.navex-pe.com/*"
      ],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "id.token.as.detached.signature": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "require.pushed.authorization.requests": "false",
        "saml.artifact.binding": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "navex-esg",
      "consentRequired": false,
      "defaultClientScopes": [
        "doorman-mappings",
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "81d2ed8c-fee0-423f-9d9b-487a3482142e",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "http://csrtenant.lab.csrware.com/*"
      ],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {},
        "id": "5f33add4-9112-4582-83d3-9f73abc0fde0",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "a17b3c9d-44d4-4416-8d16-b66dd9f8ffb0",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "c39dec49-fd86-4320-86f5-a86375958bf7",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "ede90a7c-1ea3-4798-923d-22f0b3494eed",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "2eb51d17-8521-4dbc-83d9-7d996d4bc585",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "5270c901-118c-44ae-99fd-97d423522c2e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "d46510d3-b8e1-49fa-93e8-9fed98f17b6e",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "a843a7a3-2700-478e-989d-08a31894bf98",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "email",
    "profile",
    "role_list",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "microprofile-jwt",
    "offline_access",
    "phone"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "navex",
    "description": "${role_default-roles}",
    "id": "3d4d2db1-0731-4af2-b647-b08241d8df40",
    "name": "default-roles-navex"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": true,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging",
    "moonwatch-session-spi"
  ],
  "failureFactor": 30,
  "groups": [],
  "id": "navex",
  "identityProviderMappers": [
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/TenantId",
        "attributes": "[]",
        "syncMode": "INHERIT",
        "user.attribute": "tenantid"
      },
      "id": "fb3c1569-79a3-4353-857c-e0bdf68d5898",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "TenantId"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/DoormanClientKey",
        "user.attribute": "clientkey"
      },
      "id": "fec30b61-4068-4071-90a4-1a7c0f87f5a5",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "ClientKey"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/EmailAddress",
        "user.attribute": "email"
      },
      "id": "1c7d9d03-a956-4e45-8c6c-62767eab941a",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "EmailAddress"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/FirstName",
        "user.attribute": "firstName"
      },
      "id": "e8bf7e2c-441d-4fea-86ca-938432f4aeef",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "FirstName"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/LastName",
        "user.attribute": "lastName"
      },
      "id": "87b336f7-ed18-45f6-a6c2-2f6521a88280",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "LastName"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/MiddleName",
        "user.attribute": "middle_name"
      },
      "id": "0c49487e-6f01-484c-b8d4-d03d91b5e446",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "MiddleName"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/PreferredLanguageRegion",
        "user.attribute": "locale"
      },
      "id": "333042dd-ea24-4a8f-9e3f-04da0d3a17fb",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "PreferredLanguageRegion"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/UserName",
        "user.attribute": "preferred_username"
      },
      "id": "ff50901b-9a7a-4713-a251-9469763274f1",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "Preferred Username"
    },
    {
      "config": {
        "attribute.name": "http://schemas.navexglobal.com/identity/claims/UserStoreRole",
        "user.attribute": "user_store_role"
      },
      "id": "33e94a8b-81b5-4111-be8b-a3b8eb9fc6e6",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "UserStoreRole"
    },
    {
      "config": {
        "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
        "user.attribute": "puid"
      },
      "id": "76e51f78-336d-43e8-b995-2e21023f3f13",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "name": "Puid"
    },
    {
      "config": {
        "template": "${ATTRIBUTE.http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name}"
      },
      "id": "e819deb1-ca38-4f26-85cb-bacf2cfa777b",
      "identityProviderAlias": "doorman",
      "identityProviderMapper": "saml-username-idp-mapper",
      "name": "UserName"
    }
  ],
  "identityProviders": [
    {
      "addReadTokenRoleOnCreate": false,
      "alias": "doorman",
      "authenticateByDefault": false,
      "config": {
        "nameIDPolicyFormat": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "samlXmlKeyNameTranformer": "KEY_ID",
        "signatureAlgorithm": "RSA_SHA256",
        "signingCertificate": "MIIDETCCAf2gAwIBAgIQYwcmdzAnyJZBuTdkoqeoOTAJBgUrDgMCHQUAMB4xHDAaBgNVBAMTE3d3dy5uYXZleGdsb2JhbC5jb20wHhcNMTUwNTE1MTcwMjM4WhcNMzkxMjMxMjM1OTU5WjAeMRwwGgYDVQQDExN3d3cubmF2ZXhnbG9iYWwuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmOJPBT4JjW8vpSwdvTLEFP+C9AP6qwQpq7OCPZcLoTGFjhvj8J4gWpVyB33hJVzqOo1vOzU4FRieAu+vT2VEEnavjxlEQ2oH8dfcia8sHMmFEHrXmWxBQbShQrMXHqpMxm08PV4GVdRmN0RNqCzQh+ibWfZGon2uRFHketH45ghEjdtFMUcivYnF61OVPVEvCemIzi7uHTka6Qo+oaBKPrCvrrzEj8n25wxu4S3nArm37Q3b+kcw6iTk3dZ2IVTsJ+eLNLlw6bnOp5S6hzftKYDJrPW7F4eFbhz4JC94eZbo88CwQtVzcZ3iaWhYHRam9TZ2pmJxF7ueJ6UBMgsAGwIDAQABo1MwUTBPBgNVHQEESDBGgBAt4HxR+tOwS4xWYJ9b7iHioSAwHjEcMBoGA1UEAxMTd3d3Lm5hdmV4Z2xvYmFsLmNvbYIQYwcmdzAnyJZBuTdkoqeoOTAJBgUrDgMCHQUAA4IBAQBLpmI00LFDXan+J9nuWmqYZbxQ/u/FxrT1AS+AbGN2j5+Hv4XbMTY+farpQn4pwwk9o8leoa+SIKMzmmX3b1VXYkVMxVRVLQLdsDm4+WBokMl87pxOR9H6uQluOJZly7SFcSWu8+aL0Gz8N83d2+1x/rnIXupik+/K73oGsP/b0KUPVmU3xpnzyVKNfczuYHuRGzeO8jAuo8NaKMo6DUVTRiMTEjq1UvAplNp0fIDtREDCQxXGKnIjoj55d4JlGD6rnt0JY17Gbddlbf2TN7e39EdUk/PcEjOO9GQe8V/hn3SPMpsvzkWS76dOsYNaeZ2rz3lfkQOhlI0hBzuLYnpz",
        "singleLogoutServiceUrl": "https://doorman.dev.gw.local/Logout",
        "singleSignOnServiceUrl": "https://doorman.dev.gw.local/SamlRequest",
        "useJwksUrl": "true",
        "validateSignature": "true"
      },
      "displayName": "Doorman",
      "enabled": true,
      "firstBrokerLoginFlowAlias": "first broker login",
      "internalId": "c38a9602-2e3b-4257-ab10-984a26e3d37d",
      "linkOnly": false,
      "providerId": "saml",
      "storeToken": false,
      "trustEmail": false,
      "updateProfileFirstLoginMode": "on"
    }
  ],
  "internationalizationEnabled": false,
  "keycloakVersion": "15.0.2",
  "loginWithEmailAllowed": false,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "navex",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_manage-account}",
          "id": "6818ecf2-db0d-4b63-9fef-5274178c866a",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_manage-consent}",
          "id": "fbcb7273-17d8-4428-99d7-c0b70f262adc",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_delete-account}",
          "id": "af8815ca-3a92-4659-adf1-17543c2b5071",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_manage-account-links}",
          "id": "1f713088-3fce-427c-8999-16555d56cf9c",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_view-applications}",
          "id": "b994f673-0aa0-484d-9bbd-1378ee8c767d",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_view-consent}",
          "id": "9fe42b33-0632-42e0-9c45-af3103b9e021",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b425be5-886d-4c52-b3fa-bd784139e791",
          "description": "${role_view-profile}",
          "id": "d326fdc6-6da1-4ffb-8a32-cd579544ef29",
          "name": "view-profile"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "appshell": [],
      "appshell-bff": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "ce1cac52-1298-4064-9a98-dd2a9fee63c7",
          "description": "${role_read-token}",
          "id": "2442f851-fc15-4594-9673-b1a18b01b53d",
          "name": "read-token"
        }
      ],
      "cmd-backend": [],
      "cmd-frontend": [],
      "coi": [],
      "coursecustomizer": [],
      "customermanager": [],
      "epadmin": [],
      "epim-iem": [],
      "insights": [],
      "moonwatch-api-proxy": [],
      "navex-esg": [],
      "ncis-api": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "impersonation",
                "manage-authorization",
                "manage-clients",
                "manage-events",
                "manage-identity-providers",
                "manage-realm",
                "manage-users",
                "query-clients",
                "query-groups",
                "query-realms",
                "query-users",
                "view-authorization",
                "view-clients",
                "view-events",
                "view-identity-providers",
                "view-realm",
                "view-users"
              ]
            }
          },
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_realm-admin}",
          "id": "1e76fcb2-067b-46f8-bd57-f61646331446",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-clients}",
          "id": "ec6279cc-e743-4a97-8143-4c5b173b7d50",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-users}",
          "id": "9a69d8e0-d83e-4657-bef7-9851c866b065",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_create-client}",
          "id": "1f3c6c75-d22b-49ec-990c-789be199bbcf",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_impersonation}",
          "id": "92ac3164-59b7-4a6a-9099-96d54c9af71f",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-authorization}",
          "id": "44e345ee-318e-4169-9e06-f1128cd847d5",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-clients}",
          "id": "d4e1f1f0-9edd-4da3-b370-7fedf849248b",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-events}",
          "id": "737960fc-a0b6-43d9-b754-ec8c5c45b642",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-identity-providers}",
          "id": "09e6968c-435f-41f8-b66c-577df9fa526f",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-realm}",
          "id": "076fae53-31ac-42ae-874a-7cf77a2e7b93",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_manage-users}",
          "id": "e0797deb-7082-4982-9dd0-69d7647c77aa",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_query-clients}",
          "id": "f5f76860-101b-499a-8293-9340bd996298",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_query-groups}",
          "id": "d67f4a24-4392-44d1-ba3b-e26f6a20e817",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_query-realms}",
          "id": "c4f77acf-c04e-4e4c-a830-5197e79271e7",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_query-users}",
          "id": "231c7666-8e3e-41d8-bd1a-af49f36327d1",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-authorization}",
          "id": "c27f3fdd-d06d-457b-8c9c-3bd5502ac375",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-events}",
          "id": "f3ec9f6b-6a7c-44a4-9c5f-059322ca134e",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-identity-providers}",
          "id": "864d72a2-b0f7-4525-8cf5-f29b7eb2c0e1",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "bd7901f8-59d6-4e55-b6d3-42fb4dd57eb1",
          "description": "${role_view-realm}",
          "id": "34172c35-13dd-4fcf-af32-47d926e6448e",
          "name": "view-realm"
        }
      ],
      "riskrate": [],
      "security-admin-console": [],
      "workato": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "navex",
        "description": "${role_default-roles}",
        "id": "3d4d2db1-0731-4af2-b647-b08241d8df40",
        "name": "default-roles-navex"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "navex",
        "description": "${role_offline-access}",
        "id": "3751ca25-00ae-4ab5-8935-73d5794144ba",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "navex",
        "description": "${role_uma_authorization}",
        "id": "fb1bab1e-2276-401d-8f5e-3ae0bc878b9c",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "attributes": {
        "clientkey": [
          "trial12"
        ],
        "locale": [
          "en-US"
        ],
        "middle_name": [
          "CanUpdateMiddleName-1549420977"
        ],
        "preferred_username": [
          "shiva"
        ],
        "puid": [
          "c785a0fb-8b1a-e511-af9f-00155d103480"
        ],
        "user_store_role": [
          "UserStoreAdministrator"
        ]
      },
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "createdTimestamp": 1585593668395,
      "credentials": [],
      "disableableCredentialTypes": [],
      "email": "mheade@navexglobal.com",
      "emailVerified": false,
      "enabled": true,
      "federatedIdentities": [
        {
          "identityProvider": "doorman",
          "userId": "c785a0fb-8b1a-e511-af9f-00155d103480",
          "userName": "c785a0fb-8b1a-e511-af9f-00155d103480"
        }
      ],
      "firstName": "Shiva",
      "groups": [],
      "id": "c958c517-fa7f-482a-9efe-02c70860a065",
      "lastName": "GW Admin",
      "notBefore": 0,
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "c785a0fb-8b1a-e511-af9f-00155d103480"
    },
    {
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "createdTimestamp": 1586373527596,
      "credentials": [],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "70bdefa3-18e3-40f8-aeba-9715b4cbe6a1",
      "notBefore": 0,
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "insights",
      "totp": false,
      "username": "service-account-insights"
    },
    {
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "createdTimestamp": 1621966131528,
      "credentials": [],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "c7e3f0a1-db84-4dd0-94b6-84d040c0f210",
      "notBefore": 0,
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "workato",
      "totp": false,
      "username": "service-account-workato"
    },
    {
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ],
        "realm-management": [
          "manage-users",
          "view-users"
        ]
      },
      "createdTimestamp": 1584483310914,
      "credentials": [],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "82e5b539-1bfc-424f-8c1e-b34251934d81",
      "notBefore": 0,
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "moonwatch-api-proxy",
      "totp": false,
      "username": "service-account-moonwatch-api-proxy"
    },
    {
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ],
        "realm-management": [
          "view-users"
        ]
      },
      "createdTimestamp": 1584483310914,
      "credentials": [],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "82e5b539-1bfc-424f-8c1e-b34251934d8b",
      "notBefore": 0,
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "ncis-api",
      "totp": false,
      "username": "service-account-ncis-api"
    },
    {
      "createdTimestamp": 1644534729790,
      "credentials": [],
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "c5836b48-6765-45bd-af46-f08efbfc8ee3",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-navex"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "customermanager",
      "totp": false,
      "username": "service-account-customermanager"
    }
  ],
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
